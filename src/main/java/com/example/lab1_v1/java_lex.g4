lexer grammar java_lex;

IMPORT: 'import';
TYPE: 'int'|'float'|'double'|'char'|'string'|'long'|'boolean'|'void';
FOR: 'for';
IF: 'if';
ELSE: 'else';
CLASS: 'class';
MODIFIER: 'public'|'private'|'protected';
ARITHMETIC: '+'|'-'|'*';
DIV: '/';
MOD: '%';
ASSIGN: '=';
NEQ: '!=';
NOT: '!';
SIGN: '>'|'<'|'=='|'>='|'<=';
AND: '&&';
OR: '||';
LPAREN: '(';
RPAREN: ')';
LBRACE: '{';
RBRACE: '}';
SEMI: ';';
COMMA: ',';
QUOTE: '"';
DOT: '.';
COLON: ':';
LSBRACE: '[';
RSBRACE: ']';
LINE_COMMENT: '//' ~[\r\n]* -> skip;
BLOCK_COMMENT: '/*' .*? '*/' -> skip;
NEWLINE: [ \t\r\n]+ -> skip;
VARIABLE: [A-Za-z_]+ ;
NUMBER : [0-9]+ ;
